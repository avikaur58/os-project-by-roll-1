#include<stdio.h>
#include<pthread.h>
#include<semaphore.h>
#include<unistd.h>
sem_t NS,NW,NE,ES,EW,SW,SN,WN,EN,SE,WS,WE,common;
struct direction
{
int o;
int d;
};
vod print_direction(int , int);
int origin=0, destination=0;
int ncount=0;ecount=0;wcount=0;scount=0;

void *North(struct direction *s1)
{
sem_wait(&common);
printf("entering critical section\n")
ncount++;
if(ncount==1)
{
if(s->d==3)
{
sem_wait(&EW);
sem_wait(&WE);
sem_wait(&EN);
sem_wait(&SE);
}
else if(s1->d==4)
{
sem_wait(&WE);
sem_wait(&SN);
sem_wait(&EN);
sem_wait(&SE);
}
}
sem_post(&common);
printf("%d from %d\n",s1->o,s1->d);
print_direction(s1->o,s1->d);
sem_wait(&common);
ncount--;
if(ncount==0)
{
if(s1->d==3)
{
sem_post(&EW);
sem_post(&WE);
sem_post(&EN);
sem_post(&SE);
}
else if(s1->d==4)
{
sem_post(&WE);
sem_post(&SN);
sem_post(&EN);
sem_post(&SE);
}
}
sem_post(&common);
}
void *East(struct direction *s1)
{
sem_wait(&common);
printf("entering critical section\n");
ecount++;
if(ecount==1)
{
if(s1->d==4)
{
sem_wait(&NS);
sem_wait(&SN);
sem_wait(&WS);
sem_wait(&SE);
}
else if(s1->d==1)
{
sem_wait(&NS);
sem_wait(&WE);
sem_wait(&WS);
sem_wait(&SE);
}
}
sem_post(&common);
print_direction(s1->o,s1->d);
ecount--;
if(ecount==0)
{
if(s1->d==4)
{
sem_post(&NS);
sem_post(&SN);
sem_post(&WS);
sem_post(&SE);
}
else if(s1->d==1)
{
sem_post(&NS);
sem_post(&WE);
sem_post(&WS);
sem_post(&SE);
}
}
sem_post(&common);
}
void *South(struct direction *s1)
{
sem_wait(&common);
printf("entering critical section\n");
scount++;
if(scount==1)
{
if(s1->d==1)
{
sem_wait(&EW);
sem_wait(&WE);
sem_wait(&NW);
sem_wait(&WS);
}
else if(s1->d==2)
{
sem_wait(&EW);
sem_wait(&NS);
sem_wait(&WS);
sem_wait(&NW);
}
}
sem_post(&common);
printf("%d from %d\n", s1->o,s1->d);
print_direction(s1->o,s1->d);
sem_wait(&common);
scount--;
if(scount==0)
{
if(s1->d==1)
{
sem_post(&EW);
sem_post(&WE);
sem_post(&NW);
sem_post(&WS);
}
else if(s1->d==2)
{
sem_post(&EW);
sem_post(&NS);
sem_post(&WS);
sem_post(&NW);
}
}
sem_post(&common);
}
void *West(struct direction *s1)
{
}
void print_direction(int origin, int destination)
{
}
int main()
{
}
